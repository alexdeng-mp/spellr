#!/usr/bin/env ruby
# frozen_string_literal: true

require 'net/http'
require 'fileutils'
require_relative 'util/write'
require_relative 'util/fetch'

module SCOWLDownloader
  module_function

  extend Write
  extend Fetch

  LOCALES = %i{US AU CA GBs GBz}.freeze
  DEFAULT_PARAMS = {
    max_size: 80,
    spelling: LOCALES.first,
    max_variant: 0,
    diacritic: :both,
    hacker: true,
    download: :wordlist,
    encoding: :'utf-8',
    format: :inline
  }.freeze

  def download
    fetch_all
    prepare_common_wordlist
    remove_common_words_from_locales
    generate_gb
    copy_base_license
  end

  def locale_filename(locale = nil)
    ['english', locale].compact.join('/')
  end

  def locale_wordlist_path(locale = nil)
    wordlist_path(locale_filename(locale))
  end

  def locale_license_path(locale = nil)
    license_path(locale_filename(locale))
  end

  def locale_write_wordlist(words, locale = nil)
    write_wordlist(words, locale_filename(locale))
  end

  def locale_write_license(license, locale = nil)
    write_license(license, locale_filename(locale))
  end

  def fetch_all
    LOCALES.each { |locale| fetch_for_locale(locale) }
  end

  def fetch_for_locale(locale)
    words = fetch(uri(locale).to_s)
    words = extract_and_write_license(words, locale)
    locale_write_wordlist(words, locale)
  end

  def uri(spelling = :US)
    query = URI.encode_www_form(**DEFAULT_PARAMS, spelling: spelling)
    URI.parse("http://app.aspell.net/create?#{query}")
  end

  def extract_and_write_license(words, locale)
    license, words = words.split('---', 2)
    locale_write_license(license, locale) if license
    words
  end

  def prepare_common_wordlist
    keep_common(
      locale_wordlist_path(LOCALES[0]), locale_wordlist_path(LOCALES[1]), locale_wordlist_path
    )
    LOCALES.drop(2).each do |locale|
      keep_common(locale_wordlist_path(locale), locale_wordlist_path)
    end
  end

  def remove_common_words_from_locales
    LOCALES.each do |locale|
      keep_right_only(locale_wordlist_path, locale_wordlist_path(locale))
    end
  end

  def keep_common(path1, path2, output = path2)
    system("comm -12 #{path1} #{path2} > #{output}.tmp")

    output.sub_ext('.txt.tmp').rename(output)
  end

  def keep_right_only(path1, path2, output = path2)
    system("comm -13 #{path1} #{path2} > #{output}.tmp")
    output.sub_ext('.txt.tmp').rename(output)
  end

  def generate_gb
    locale_write_wordlist(locale_wordlist_path(:GBs).read + locale_wordlist_path(:GBz).read, :GB)
    FileUtils.copy(locale_license_path(:GBs), locale_license_path(:GB))
  end

  def copy_base_license
    FileUtils.copy(locale_license_path(:US), locale_license_path)
  end
end

SCOWLDownloader.download
